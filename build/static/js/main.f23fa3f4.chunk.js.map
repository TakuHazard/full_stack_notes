{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"oPAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBAChBC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEpD,OACE,wBAAIC,UAAY,QACbJ,EAAKK,QACV,4BAAQC,QAAWL,GAAmBC,KCPlCK,EAAU,uDAuBD,EArBA,WACb,IAAMC,EAAUC,IAAMC,IAAIH,GACpBI,EAAa,CACfC,GAAG,IACHP,QAAQ,mCACRQ,KAAM,2BACNV,WAAW,GAEf,OAAOK,EAAQM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAON,OAaxC,EAVA,SAAAO,GAEb,OADgBT,IAAMU,KAAKZ,EAASW,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACJ,EAAIM,GAElB,OADgBT,IAAMW,IAAN,UAAab,EAAb,YAAwBK,GAAMM,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCfrCK,EAAe,SAAC,GAAc,IAAbC,EAAY,EAAZA,QACrB,OAAe,OAAZA,EACM,KAIP,yBAAKlB,UAAY,SACdkB,IAKDC,EAAS,WAOb,OACE,yBAAKC,MAPa,CAClBC,MAAQ,QACRC,UAAY,SACZC,SAAU,KAKR,6BACA,sDA4FSC,EAvFH,WAAM,IAAD,EACUC,mBAAS,IADnB,mBACRC,EADQ,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAERG,EAFQ,KAEAC,EAFA,OAGeJ,oBAAS,GAHxB,mBAGRK,EAHQ,KAGCC,EAHD,OAIyBN,mBAAS,MAJlC,mBAIRO,EAJQ,KAIMC,EAJN,KAOfC,qBAAU,WACRC,IAEKzB,MAAK,SAAA0B,GACJT,EAASS,QAEf,IACF,IAAMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAAA1C,GAAI,OAAIA,EAAKG,aA6ChE,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcmB,QAAWc,IACzB,6BACE,4BAAQ9B,QAAU,kBAAK6B,GAAYD,KAAnC,OAAkDA,EAAS,YAAY,QAGzE,4BACGO,EAAYE,KAAI,SAAA3C,GAAI,OAAG,kBACA,EADA,CACK4C,IAAO5C,EAAKY,GACjBZ,KAAQA,EACRC,iBAAmB,kBAhCtB,SAACW,GACjB,sCAAkCA,GAA3C,IACMZ,EAAO8B,EAAMe,MAAK,SAAAC,GAAC,OAAIA,EAAElC,KAAOA,KAChCmC,EAAW,2BAAO/C,GAAP,IAAaG,WAAaH,EAAKG,YAEjDoC,EACY3B,EAAGmC,GACTjC,MAAK,SAAAkC,GACJjB,EAASD,EAAMa,KAAI,SAAA3C,GAAI,OAAIA,EAAKY,KAAOA,EAAKZ,EAAOgD,SAEpDC,OAAM,SAAAC,GACLb,EAAgB,SAAD,OACJrC,EAAKK,QADD,sCAGf8C,YAAW,WACTd,EAAgB,QAChB,KACFN,EAASD,EAAMY,QAAO,SAAAI,GAAC,OAAIA,EAAElC,KAAOA,SAeUwC,CAAmBpD,EAAKY,WAG1E,0BAAMyC,SA1DM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBnD,QAAS2B,EACTnB,MAAM,IAAI4C,MAAOC,cACjBvD,UAAWwD,KAAKC,SAAW,IAG7BrB,EACYiB,GACP1C,MAAK,SAAAkC,GACJjB,EAASD,EAAMb,OAAO+B,IACtBf,EAAW,SA+Cb,2BACE4B,MAAS7B,EACT8B,SA1CiB,SAACR,GACxBrB,EAAWqB,EAAMS,OAAOF,UA2CpB,4BAAQG,KAAM,UAAd,SAEF,kBAAC,EAAD,Q,MCrGJC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.f23fa3f4.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\nconst label = note.important ? 'make not important' : 'make important'\n\n  return (\n    <li className = 'note'>\n      {note.content}\n  <button onClick = {toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import axios from 'axios'\nconst baseUrl = 'https://glacial-depths-84307.herokuapp.com/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting ={\n      id:10000,\n      content:'This note is not saved to server',\n      date: '2019-05-30T17:30:31.098Z',\n      important: true,\n  }\n  return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default {getAll,create,update}","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\n\nconst Notification = ({message}) =>{\n  if(message === null){\n    return null\n  }\n\n  return(\n    <div className = \"error\">\n      {message}\n    </div>\n  )\n}\n\nconst Footer = ()=>{\n  const footerStyle = {\n    color : 'green',\n    fontStyle : 'italic',\n    fontSize :16\n  }\n\n  return (\n    <div style = {footerStyle}>\n      <br />\n      <em> Note app, Taku 2020</em>\n    </div>\n  )\n}\n\nconst App = () =>{\n  const [notes,setNotes] = useState([])\n  const [newNote,setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  \n  useEffect(() =>{\n    noteService\n        .getAll()\n        .then(initialNotes =>{\n          setNotes(initialNotes)\n        })\n  },[])\n  const notesToShow = showAll ? notes : notes.filter(note => note.important)\n\n  const addNote = (event) =>{\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    }\n\n    noteService\n        .create(noteObject)\n        .then(returnedNote =>{\n          setNotes(notes.concat(returnedNote))\n          setNewNote('')\n        })\n\n  \n  }\n  \n  \n  const handleNoteChange = (event)=>{\n    setNewNote(event.target.value)\n  }\n\n  const toggleImportanceOf = (id) =>{\n    const url = `http://localhost:3001/notes/${id}`\n    const note = notes.find(n => n.id === id)\n    const changedNote = {...note, important : !note.important}\n\n   noteService\n       .update(id,changedNote)\n        .then(returnedNote =>{\n          setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n        })\n        .catch(error=>{\n          setErrorMessage(\n            `Note '${note.content}' was already removed from server`\n          )\n          setTimeout(()=>{\n            setErrorMessage(null)\n          },5000)\n          setNotes(notes.filter(n => n.id !== id))\n        })\n  }\n  return(\n    <div>\n      <h1>Notes</h1>\n      <Notification message = {errorMessage}/>\n      <div>\n        <button onClick ={()=> setShowAll(!showAll)}>show{showAll ?'important':'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note=> <\n                                Note key = {note.id} \n                                note = {note} \n                                toggleImportance ={()=> toggleImportanceOf(note.id)}\n                                />)}\n      </ul>\n      <form onSubmit = {addNote}>\n        <input \n          value = {newNote}\n          onChange = {handleNoteChange}\n        />\n        <button type =\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n// const promise = axios.get('http://localhost:3001/notes')\n// console.log(promise)\n\n// promise.then(response =>{\n//   console.log(response)\n// })\n\n\n  ReactDOM.render(\n    <App />,\n    document.getElementById('root')\n  )\n\n\n\n"],"sourceRoot":""}